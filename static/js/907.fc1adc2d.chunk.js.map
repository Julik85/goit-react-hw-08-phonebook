{"version":3,"file":"static/js/907.fc1adc2d.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"formName\":\"ContactForm_formName__9bHzl\",\"formNumber\":\"ContactForm_formNumber__UMrmC\",\"formBtn\":\"ContactForm_formBtn__qZGY3\"};","export const getContacts = state => state.contacts.items;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n\nexport const getFilter = state => state.filter.filter;","import React, { useState } from 'react';\nimport css from './ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const items = useSelector(getContacts);\n\n  const handleChangeName = event => {\n    const { value } = event.target;\n    setName(value);\n  };\n\n  const handleChangeNumber = event => {\n    const { value } = event.target;\n    setNumber(value);\n  };\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    const contactsList = [...items];\n    if (contactsList.findIndex(contact =>name === contact.name) !== -1) {\n      alert (`${name} is already in contacts.`);\n    } else {\n      dispatch(addContact({name, number }));\n    }\n    form.reset();\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleFormSubmit}>\n      <label className={css.formLabel}>Name </label>\n      <input\n        className={css.formName}\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        placeholder=\"Enter name\"\n        value={name}\n        onChange={handleChangeName}\n      />\n      <label className={css.formLabel}>Number\n      <input\n        className={css.formNumber}\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        placeholder=\"Enter phone number\"\n        value={number}\n        onChange={handleChangeNumber}\n      />\n       </label>\n      <button className={css.formBtn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\n","// extracted by mini-css-extract-plugin\nexport default {\"contactListItemBtn\":\"ContactList_contactListItemBtn__TXYnT\"};","\nimport { useDispatch, useSelector } from 'react-redux';\nimport { delContact } from 'redux/contacts/operations';\nimport { getContacts, getFilter } from 'redux/contacts/selectors';\nimport css from './ContactList.module.css';\n\nconst getVisibleContacts = (contacts, filter) => {\n  if (!filter) {\n    return contacts;\n  } else {\n    return contacts.filter(contact => {\n      return contact.name.toLowerCase().includes(filter.toLowerCase());\n    });\n  }\n};\n\nexport const ContactList = () => {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n  const visibleContacts = getVisibleContacts(contacts, filter);\n\n  const dispatch = useDispatch();\n  const handleDelete = id => dispatch(delContact(id));\n\n  return (\n    <div className={css.wraperContactList}>\n      <ul className={css.contactList}>\n        {visibleContacts.map((contact, id) => (\n          <li key={id} className={css.contactListItem}>\n            {contact.name}: {contact.number}\n            <button\n              type=\"button\"\n              className={css.contactListItemBtn}\n              onClick={() => handleDelete(contact.id)}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};","// extracted by mini-css-extract-plugin\nexport default {\"filterName\":\"Filter_filterName__Y2kKA\"};","import { getFilter } from 'redux/contacts/selectors';\nimport css from './Filter.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\n\n\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n  \n  \n  const handleChange = event => {\n    dispatch(setFilter(event.target.value));\n  };\nreturn ( \n  <div>\n    <label className={css.filterLabel}>Find contacts by Name </label>\n    <input\n      className={css.filterName}\n      type=\"text\"\n      name=\"filter\"\n      placeholder=\"Enter filter\"\n      value={filter}\n      onChange={handleChange}\n    />\n  </div>\n);\n}\n\n","import { ContactForm } from \"components/ContactForm/ContactForm\";\nimport { ContactList } from \"components/ContactList/ContactList\";\nimport { Filter } from \"components/Filter/Filter\";\nimport { useEffect } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchContacts } from \"redux/contacts/operations\";\nimport { getIsLoading } from \"redux/contacts/selectors\";\n\n\nexport default function Contacts () {\n    const dispatch = useDispatch();\n    const isLoading = useSelector(getIsLoading);\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n\n    return (\n        <>\n        <Helmet>\n            <title>Phonebook</title>\n        </Helmet>\n        <ContactForm />\n        <div>\n            {isLoading && 'Recuest in progress...'}\n        </div>\n        <Filter />\n        <ContactList />\n        </>\n    )\n}"],"names":["getContacts","state","contacts","items","getIsLoading","isLoading","getFilter","filter","ContactForm","useState","name","setName","number","setNumber","dispatch","useDispatch","useSelector","className","css","onSubmit","event","preventDefault","form","currentTarget","findIndex","contact","alert","addContact","reset","type","pattern","title","required","placeholder","value","onChange","target","ContactList","visibleContacts","toLowerCase","includes","getVisibleContacts","map","id","onClick","delContact","handleDelete","Filter","setFilter","Contacts","useEffect","fetchContacts","Helmet"],"sourceRoot":""}